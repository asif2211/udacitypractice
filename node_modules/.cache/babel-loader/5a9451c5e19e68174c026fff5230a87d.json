{"ast":null,"code":"// Library Code\nfunction createStore(reducer) {\n  // The store should have four parts\n  // 1. The state\n  // 2. Get the state.\n  // 3. Listen to changes on the state.\n  // 4. Update the state\n  let state;\n  let listeners = [];\n\n  const getState = () => state;\n\n  const subscribe = listener => {\n    listeners.push(listener);\n    return () => {\n      listeners = listeners.filter(l => l !== listener);\n    };\n  };\n\n  const dispatch = action => {\n    state = reducer(state, action);\n    listeners.forEach(listener => listener());\n  };\n\n  return {\n    getState,\n    subscribe,\n    dispatch\n  };\n} // App Code\n\n\nfunction todos(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return state.concat([action.todo]);\n\n    case 'REMOVE_TODO':\n      return state.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE_TODO':\n      return state.map(todo => todo.id !== action.id ? todo : Object.assign({}, todo, {\n        complete: !todo.complete\n      }));\n\n    default:\n      return state;\n  }\n}\n\nfunction goals(state = [], action) {\n  switch (action.type) {\n    case 'ADD_GOAL':\n      return state.concat([action.goal]);\n\n    case 'REMOVE_GOAL':\n      return state.filter(goal => goal.id !== action.id);\n\n    default:\n      return state;\n  }\n}\n\nfunction app(state = {}, action) {\n  return {\n    todos: todos(state.todos, action),\n    goals: goals(state.goals, action)\n  };\n}\n\nconst store = createStore(app);\nstore.subscribe(() => {\n  console.log('The new state is: ', store.getState());\n});\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: {\n    id: 0,\n    name: 'Walk the dog',\n    complete: false\n  }\n});\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: {\n    id: 1,\n    name: 'Wash the car',\n    complete: false\n  }\n});\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: {\n    id: 2,\n    name: 'Go to the gym',\n    complete: true\n  }\n});\nstore.dispatch({\n  type: 'REMOVE_TODO',\n  id: 1\n});\nstore.dispatch({\n  type: 'TOGGLE_TODO',\n  id: 0\n});\nstore.dispatch({\n  type: 'ADD_GOAL',\n  goal: {\n    id: 0,\n    name: 'Learn Redux'\n  }\n});\nstore.dispatch({\n  type: 'ADD_GOAL',\n  goal: {\n    id: 1,\n    name: 'Lose 20 pounds'\n  }\n});\nstore.dispatch({\n  type: 'REMOVE_GOAL',\n  id: 0\n});","map":{"version":3,"sources":["/Users/muhammadasif/udacitypractice/src/App.js"],"names":["createStore","reducer","state","listeners","getState","subscribe","listener","push","filter","l","dispatch","action","forEach","todos","type","concat","todo","id","map","Object","assign","complete","goals","goal","app","store","console","log","name"],"mappings":"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","sourcesContent":["// Library Code\nfunction createStore (reducer) {\n  // The store should have four parts\n  // 1. The state\n  // 2. Get the state.\n  // 3. Listen to changes on the state.\n  // 4. Update the state\n\n  let state\n  let listeners = []\n\n  const getState = () => state\n\n  const subscribe = (listener) => {\n    listeners.push(listener)\n    return () => {\n      listeners = listeners.filter((l) => l !== listener)\n    }\n  }\n\n  const dispatch = (action) => {\n    state = reducer(state, action)\n    listeners.forEach((listener) => listener())\n  }\n\n  return {\n    getState,\n    subscribe,\n    dispatch,\n  }\n}\n\n// App Code\nfunction todos (state = [], action) {\n  switch(action.type) {\n    case 'ADD_TODO' :\n      return state.concat([action.todo])\n    case 'REMOVE_TODO' :\n      return state.filter((todo) => todo.id !== action.id)\n    case 'TOGGLE_TODO' :\n      return state.map((todo) => todo.id !== action.id ? todo :\n        Object.assign({}, todo, { complete: !todo.complete }))\n    default :\n      return state\n  }\n}\n\nfunction goals (state = [], action) {\n  switch(action.type) {\n    case 'ADD_GOAL' :\n      return state.concat([action.goal])\n    case 'REMOVE_GOAL' :\n      return state.filter((goal) => goal.id !== action.id)\n    default :\n      return state\n  }\n}\n\nfunction app (state = {}, action) {\n  return {\n    todos: todos(state.todos, action),\n    goals: goals(state.goals, action),\n  }\n}\n\nconst store = createStore(app)\n\nstore.subscribe(() => {\n  console.log('The new state is: ', store.getState())\n})\n\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: {\n    id: 0,\n    name: 'Walk the dog',\n    complete: false,\n  }\n})\n\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: {\n    id: 1,\n    name: 'Wash the car',\n    complete: false,\n  }\n})\n\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: {\n    id: 2,\n    name: 'Go to the gym',\n    complete: true,\n  }\n})\n\nstore.dispatch({\n  type: 'REMOVE_TODO',\n  id: 1\n})\n\nstore.dispatch({\n  type: 'TOGGLE_TODO',\n  id: 0\n})\n\nstore.dispatch({\n  type: 'ADD_GOAL',\n  goal: {\n    id: 0,\n    name: 'Learn Redux'\n  }\n})\n\nstore.dispatch({\n  type: 'ADD_GOAL',\n  goal: {\n    id: 1,\n    name: 'Lose 20 pounds'\n  }\n})\n\nstore.dispatch({\n  type: 'REMOVE_GOAL',\n  id: 0\n})\n"]},"metadata":{},"sourceType":"module"}