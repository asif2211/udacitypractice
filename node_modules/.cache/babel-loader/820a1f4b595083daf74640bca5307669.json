{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/muhammadasif/udacitypractice/src/MovieCard2.js\";\nimport React, { Component } from 'react';\n\nconst MovieCard = props => {\n  const {\n    users,\n    usersWhoLikedMovie,\n    movieInfo\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movieInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liked By:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), !usersWhoLikedMovie || usersWhoLikedMovie.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"None of the current users liked this movie.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: usersWhoLikedMovie && usersWhoLikedMovie.map(userId => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: users[userId].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)\n        }, userId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)]\n  }, movieInfo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["/Users/muhammadasif/udacitypractice/src/MovieCard2.js"],"names":["React","Component","MovieCard","props","users","usersWhoLikedMovie","movieInfo","name","length","map","userId","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAS;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,kBAAT;AAA6BC,IAAAA;AAA7B,MAA2CH,KAAjD;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKG,SAAS,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIG,CAACF,kBAAD,IAAuBA,kBAAkB,CAACG,MAAnB,KAA8B,CAArD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGH,kBAAkB,IACjBA,kBAAkB,CAACI,GAAnB,CAAuBC,MAAM,IAAI;AAC/B,4BACE;AAAA,iCACE;AAAA,sBAAIN,KAAK,CAACM,MAAD,CAAL,CAAcH;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAASG,MAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND;AAFJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,KAASJ,SAAS,CAACK,EAAnB;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxBH;;KAAMT,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst MovieCard = (props)=>{\n    const { users, usersWhoLikedMovie, movieInfo } = props;\n\n    return (\n      <li key={movieInfo.id}>\n        <h2>{movieInfo.name}</h2>\n        <h3>Liked By:</h3>\n\n        {!usersWhoLikedMovie || usersWhoLikedMovie.length === 0 ? (\n          <p>None of the current users liked this movie.</p>\n        ) : (\n          <ul>\n            {usersWhoLikedMovie &&\n              usersWhoLikedMovie.map(userId => {\n                return (\n                  <li key={userId}>\n                    <p>{users[userId].name}</p>\n                  </li>\n                );\n              })}\n          </ul>\n        )}\n      </li>\n    );\n  }\n\n\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}